{"version":3,"sources":["Center.js","FetchCenters.js","SearchByPIN.js","Logo.js","SearchByDistrict.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","Center","props","item","name","address","fee","vaccine","available_capacity","CenterList","FetchCenters","items","length","map","session_id","SearchByPIN","useState","pin","setPin","setItems","selectedDate","setSelectedDate","pinerror","setPinError","invalidPin","setInvalidPin","dateError","setDateError","className","onSubmit","e","preventDefault","date","today","getDate","getMonth","toString","padStart","getUTCFullYear","fetch","then","res","json","result","error","sessions","filter","type","placeholder","onChange","p","target","value","placeholderText","selected","handleDateChange","dateFormat","popperPlacement","minDate","Date","isClearable","showYearDropdown","scrollableMonthYearDropdown","style","marginBottom","onClick","Logo","SearchByDistrict","states","require","state","setState","districts","setDistricts","districtId","setDistrictId","stateError","setStateError","districtError","setDistrictError","event","state_id","state_name","district","district_id","district_name","marginLeft","App","option","setOption","handleClick","val","Button","color","marginTop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2161cd99.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nconst Container = styled.div`\r\n  margin-bottom: 8px;\r\n  border: 1px solid lightgrey;\r\n  border-radius: 2px;\r\n  padding: 8px;\r\n  `;\r\n\r\nfunction Center(props) {\r\n   return (\r\n            <Container>\r\n                <h3>{props.item.name}</h3>\r\n                {props.item.address}<br/>\r\n                Price: &#8377;{props.item.fee}<br/>\r\n                Vaccine: {props.item.vaccine}<br/>\r\n                Available Slots: {props.item.available_capacity}\r\n            </Container>\r\n        )\r\n}\r\n\r\nexport default Center\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Center from './Center';\r\nconst Container = styled.div`\r\n  margin: 8px;\r\n  border: 1px solid lightgrey;\r\n  border-radius: 2px;\r\n  `;\r\nconst CenterList = styled.div`\r\n  padding: 8px;\r\n  `;\r\n\r\nfunction FetchCenters(props) {\r\n    return (\r\n        <div>\r\n       { !props.items ? <></> : props.items.length ? (\r\n        <Container>\r\n            <CenterList>\r\n                {props.items.map(item => (<Center key={item.session_id} item={item}/>))}\r\n            </CenterList>\r\n        </Container>\r\n            ) : (<h3>Sorry! No slots available...</h3>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FetchCenters\r\n","import React, { useState } from 'react';\r\n\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport FetchCenters from './FetchCenters';\r\nimport { AiOutlineHome } from 'react-icons/ai';\r\nimport { GiLoveInjection } from 'react-icons/gi';\r\n\r\nconst url = \"https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByPin\"\r\n\r\nexport default function SearchByPIN(props) {\r\n    const [pin, setPin] = useState('');\r\n    const [items, setItems] = useState(null);\r\n    const [selectedDate,setSelectedDate] = useState(null)\r\n    const [pinerror,setPinError] = useState('')\r\n    const [invalidPin,setInvalidPin] = useState('')\r\n    const [dateError,setDateError] = useState('')\r\n\r\n    const handlePINChange = e => {\r\n        let p = e.target.value;\r\n        if(p)\r\n        {\r\n            setPin(p)\r\n            setPinError('')\r\n        }\r\n        else\r\n        {\r\n            setPin('')\r\n            setPinError('Pincode cannot be empty')\r\n        }\r\n        setInvalidPin('')\r\n    }\r\n\r\n    const handleDateChange = date => {\r\n        setSelectedDate(date)\r\n        setDateError('')\r\n    }\r\n\r\n    const search = (e) => {\r\n        e.preventDefault();\r\n        if(pin && selectedDate)\r\n        {\r\n            const date = selectedDate;\r\n            const today = `${date.getDate()}-${(date.getMonth()+1).toString().padStart(2,0)}-${date.getUTCFullYear()}`\r\n\r\n            fetch(url+`?pincode=${pin}&date=${today}`)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n            if(result.error){\r\n                setInvalidPin(result.error);\r\n                setItems(null)\r\n            }\r\n            else\r\n            {\r\n                let res = result.sessions?result.sessions.filter(item => item.available_capacity>0):[];\r\n                setItems(res) \r\n            }\r\n            });\r\n        }\r\n        if(!pin){\r\n            setPinError('Pincode cannot be empty')\r\n        }\r\n        if(!selectedDate)\r\n            setDateError('Date is not selected')\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <div className='App'>\r\n            <form onSubmit={search}>\r\n                <div>\r\n                <p><label>Pincode:</label></p>\r\n                <input \r\n                    className='input'\r\n                    type=\"number\"\r\n                    name=\"PIN\"\r\n                    placeholder=\"Enter PIN Code...\"\r\n                    onChange={handlePINChange}\r\n                    value={pin}\r\n                />\r\n                </div>\r\n                {invalidPin?<p className='error'>{invalidPin}</p>:<></>}\r\n                <p className='error'>{pinerror}</p>\r\n                \r\n                <div>\r\n                <p><label>Date:</label></p>\r\n                \r\n                <DatePicker \r\n                placeholderText=\"Enter date...\" \r\n                className='input'\r\n                selected={selectedDate} \r\n                onChange={date => handleDateChange(date)} \r\n                dateFormat='dd/MM/yyyy' \r\n                popperPlacement='right'\r\n                minDate={new Date()} \r\n                isClearable \r\n                showYearDropdown \r\n                scrollableMonthYearDropdown/>\r\n                \r\n                </div>\r\n                <p className='error'>{dateError}</p>\r\n\r\n                <div>\r\n                    <div><button type='submit' className='btnnn'><GiLoveInjection style={{marginBottom: '4px'}}/> Find Slots</button></div>\r\n                    <div><button className='btnnn' onClick={() => props.onChange('0')}><AiOutlineHome style={{marginBottom: '4px'}}/> Home</button>{' '}</div>\r\n                </div>\r\n                \r\n                \r\n            </form>\r\n            </div>\r\n            <FetchCenters items={items}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Logo() {\r\n    return (\r\n        <div>\r\n            COWIN\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React,{useState} from 'react';\r\nimport FetchCenters from './FetchCenters';\r\nimport DatePicker from 'react-datepicker';\r\nimport { GiLoveInjection } from 'react-icons/gi';\r\nimport { AiOutlineHome } from 'react-icons/ai';\r\n\r\nexport default function SearchByDistrict(props) {\r\n    const states=require('./assets/states.json');\r\n    const url1='https://cdn-api.co-vin.in/api/v2/admin/location/districts/';\r\n    const url2='https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByDistrict';\r\n\r\n    const [state,setState] = useState('')\r\n    const [districts, setDistricts] = useState([]);\r\n    const [districtId, setDistrictId] = useState(null);\r\n    const [items, setItems] = useState(null);\r\n    const [selectedDate,setSelectedDate] = useState(null)\r\n    const [stateError,setStateError] = useState('')\r\n    const [districtError,setDistrictError] = useState('')\r\n    const [dateError,setDateError] = useState('')\r\n\r\n    const handleStateChange = (event) => {\r\n        setState(event.target.value)\r\n        setStateError('')\r\n        fetch(url1+`${event.target.value}`)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                setDistricts(result.districts);\r\n            });\r\n    }\r\n\r\n    const handleDistrictChoice =(event) => {\r\n        setDistrictId(event.target.value);\r\n        setDistrictError('')\r\n    }\r\n\r\n    const handleDateChange = date => {\r\n        setSelectedDate(date)\r\n        setDateError('')\r\n    }\r\n\r\n    const retrieve = (e) => {\r\n        e.preventDefault();\r\n        if(state && districtId && selectedDate)\r\n        {\r\n            const date = selectedDate;\r\n            const today = `${date.getDate()}-${(date.getMonth()+1).toString().padStart(2,0)}-${date.getUTCFullYear()}`\r\n            fetch(url2+`?district_id=${districtId}&date=${today}`)\r\n                .then(res=> res.json())\r\n                .then(result => {\r\n                    let res = result.sessions?result.sessions.filter(item => item.available_capacity>0):[];\r\n                    setItems(res);\r\n                });\r\n        }\r\n        if(!state)\r\n            setStateError('State is not selected')\r\n        if(!districtId)\r\n            setDistrictError('District is not selected')\r\n        if(!selectedDate)\r\n            setDateError('Date is not selected')\r\n    }\r\n\r\n    return (\r\n        \r\n        <div>\r\n            <div className=\"App\">\r\n                <form onSubmit={retrieve}>\r\n                <div className='container'>\r\n                    <p><label>Choose State: </label></p>\r\n                    <select className='input' onChange={handleStateChange}>\r\n                        {\r\n                            states.map(state=>  <option key={state.state_id} value={state.state_id}>{state.state_name}</option>)\r\n                        }\r\n                    </select>\r\n                    <p className='error'>{stateError}</p>\r\n                </div>\r\n                <div className='container'>\r\n                <p><label>Choose District: </label></p>\r\n                    <select className='input' onChange={handleDistrictChoice}>\r\n                        {\r\n                            districts.map(district=> <option key={district.district_id} value={district.district_id}>{district.district_name}</option>)\r\n                        }\r\n                    </select>\r\n                    <p className='error'>{districtError}</p>\r\n                </div>\r\n            \r\n                <div className='container'>\r\n                    <p><label>Date:</label></p>\r\n                    <DatePicker \r\n                    className='input'\r\n                    placeholderText=\"Enter date...\" \r\n                    selected={selectedDate} \r\n                    popperPlacement='right'\r\n                    onChange={date => handleDateChange(date)} \r\n                    dateFormat='dd/MM/yyyy' \r\n                    minDate={new Date()} \r\n                    isClearable \r\n                    showYearDropdown \r\n                    scrollableMonthYearDropdown/>\r\n                    <p className='error'>{dateError}</p>\r\n                </div>\r\n                        \r\n                <div style={{marginLeft:'10px'}}>\r\n                    <div><button type='submit' className='btnnn'><GiLoveInjection style={{marginBottom: '4px'}}/> Find Slots</button></div>\r\n                    <div><button className='btnnn' onClick={() => props.onChange('0')}><AiOutlineHome style={{marginBottom: '4px'}}/> Home</button></div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n            <FetchCenters items={items}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport SearchByPIN from './SearchByPIN';\r\nimport Logo from './Logo';\r\nimport SearchByDistrict from './SearchByDistrict';\r\nimport {Button} from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nfunction App() {\r\n  const [option,setOption] = useState('0');\r\n  const handleClick = (val)=> {\r\n      if(val!=='0')\r\n        setOption(val);\r\n      else\r\n        setOption(0);\r\n  }\r\n  return (\r\n    <div>\r\n      <div className='logo'><Logo/></div>\r\n      {option==='0'?\r\n            <div className='center'>\r\n                <Button color='outline-secondary' onClick={() => handleClick('1')}>Search By PIN</Button>\r\n                <Button color='outline-secondary' style={{marginTop:'20px'}} onClick={() => handleClick('2')}>Search By District</Button>\r\n            </div>\r\n        :<></>}\r\n        {option==='1'?<SearchByPIN onChange={(val) => setOption(val)}/>:<></>}\r\n        {option==='2'?<SearchByDistrict onChange={(val) => setOption(val)}/>:<></>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}