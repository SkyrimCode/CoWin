{"version":3,"sources":["components/Center.js","components/FetchCenters.js","components/SearchByPIN.js","components/Logo.js","components/SearchByDistrict.js","components/App.js","index.js"],"names":["Center","props","className","item","name","address","fee","vaccine","available_capacity","FetchCenters","id","items","length","map","session_id","SearchByPIN","useState","pin","setPin","setItems","selectedDate","setSelectedDate","pinerror","setPinError","invalidPin","setInvalidPin","dateError","setDateError","focusRef","useRef","onSubmit","e","preventDefault","date","today","getDate","getMonth","toString","padStart","getUTCFullYear","fetch","then","res","json","result","error","sessions","filter","current","scrollIntoView","behavior","block","type","placeholder","onChange","p","target","value","placeholderText","selected","handleDateChange","dateFormat","withPortal","minDate","Date","isClearable","showYearDropdown","scrollableMonthYearDropdown","style","marginBottom","onClick","ref","Logo","SearchByDistrict","states","require","state","setState","districts","setDistricts","districtId","setDistrictId","stateError","setStateError","districtError","setDistrictError","event","state_id","state_name","district","district_id","district_name","marginLeft","App","option","setOption","handleClick","val","textAlign","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9df7adfd.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Center(props) {\r\n   return (\r\n            <li>\r\n                <div className='impFont'>{props.item.name}</div>\r\n                <div>{props.item.address}</div>\r\n                <div>Price: &#8377;{props.item.fee}</div>\r\n                <div>Vaccine: {props.item.vaccine}</div>\r\n                <div>Available Slots: {props.item.available_capacity}</div>\r\n            </li>\r\n        )\r\n}\r\n\r\nexport default Center\r\n","import React from 'react'\r\nimport Center from './Center';\r\n\r\n\r\nfunction FetchCenters(props) {\r\n    return (\r\n        <div id='centerid'>\r\n       { !props.items ? <></> : props.items.length ? (\r\n        <div className=\"centerBody\">\r\n            <ul>\r\n                {props.items.map(item => (<Center key={item.session_id} item={item}/>))}\r\n            </ul>\r\n        </div>\r\n            ) : (<h3 className='centerError'>Sorry! No slots available.</h3>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FetchCenters\r\n","import React, { useState,useRef } from 'react';\r\n\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport FetchCenters from './FetchCenters';\r\nimport { AiOutlineHome } from 'react-icons/ai';\r\nimport { GiLoveInjection } from 'react-icons/gi';\r\n\r\nconst url = \"https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByPin\"\r\n\r\nexport default function SearchByPIN(props) {\r\n    const [pin, setPin] = useState('');\r\n    const [items, setItems] = useState(null);\r\n    const [selectedDate,setSelectedDate] = useState(null)\r\n    const [pinerror,setPinError] = useState('')\r\n    const [invalidPin,setInvalidPin] = useState('')\r\n    const [dateError,setDateError] = useState('')\r\n    const focusRef = useRef()\r\n  \r\n    \r\n    const handlePINChange = e => {\r\n        let p = e.target.value;\r\n        if(p)\r\n        {\r\n            setPin(p)\r\n            setPinError('')\r\n        }\r\n        else\r\n        {\r\n            setPin('')\r\n            setPinError('Pincode cannot be empty')\r\n        }\r\n        setInvalidPin('')\r\n    }\r\n\r\n    const handleDateChange = date => {\r\n        setSelectedDate(date)\r\n        setDateError('')\r\n    }\r\n\r\n    const search = (e) => {\r\n        e.preventDefault();\r\n        if(pin && selectedDate)\r\n        {\r\n            const date = selectedDate;\r\n            const today = `${date.getDate()}-${(date.getMonth()+1).toString().padStart(2,0)}-${date.getUTCFullYear()}`\r\n\r\n            fetch(url+`?pincode=${pin}&date=${today}`)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n            if(result.error){\r\n                setInvalidPin(result.error);\r\n                setItems(null)\r\n            }\r\n            else\r\n            {\r\n                let res = result.sessions?result.sessions.filter(item => item.available_capacity>0):[];\r\n                setItems(res) \r\n            }\r\n            focusRef.current?.scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n            });\r\n        }\r\n        if(!pin){\r\n            setPinError('Pincode cannot be empty')\r\n        }\r\n        if(!selectedDate)\r\n            setDateError('Date is not selected')\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <div className='App'>\r\n            <form onSubmit={search}>\r\n                <div>\r\n                <p><label>Pincode:</label></p>\r\n                <input \r\n                    className='input'\r\n                    type=\"number\"\r\n                    name=\"PIN\"\r\n                    placeholder=\"Enter PIN Code...\"\r\n                    onChange={handlePINChange}\r\n                    value={pin}\r\n                />\r\n                </div>\r\n                {invalidPin?<p className='error'>{invalidPin}</p>:<></>}\r\n                <p className='error'>{pinerror}</p>\r\n                \r\n                <div>\r\n                <p><label>Date:</label></p>\r\n                \r\n                <DatePicker \r\n                placeholderText=\"Enter date...\" \r\n                className='input'\r\n                selected={selectedDate} \r\n                onChange={date => handleDateChange(date)} \r\n                dateFormat='dd/MM/yyyy' \r\n                withPortal\r\n                minDate={new Date()} \r\n                isClearable \r\n                showYearDropdown \r\n                scrollableMonthYearDropdown/>\r\n                \r\n                </div>\r\n                <p className='error'>{dateError}</p>\r\n\r\n                <div>\r\n                    <div><button type='submit' className='button btn2' ><span><GiLoveInjection style={{marginBottom: '4px'}}/> Find Slots</span></button></div>\r\n                    <div><button className='button btn2' onClick={() => props.onChange('0')}><span><AiOutlineHome style={{marginBottom: '4px'}}/> Home</span></button>{' '}</div>\r\n                </div>\r\n                \r\n                \r\n            </form>\r\n            </div>\r\n            \r\n            <div ref={focusRef}><FetchCenters items={items}/></div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Logo() {\r\n    return (\r\n        <div>\r\n            COWIN\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React,{useState,useRef} from 'react';\r\nimport FetchCenters from './FetchCenters';\r\nimport DatePicker from 'react-datepicker';\r\nimport { GiLoveInjection } from 'react-icons/gi';\r\nimport { AiOutlineHome } from 'react-icons/ai';\r\n\r\nexport default function SearchByDistrict(props) {\r\n    const states=require('../assets/states.json');\r\n    const url1='https://cdn-api.co-vin.in/api/v2/admin/location/districts/';\r\n    const url2='https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByDistrict';\r\n\r\n    const [state,setState] = useState('')\r\n    const [districts, setDistricts] = useState([]);\r\n    const [districtId, setDistrictId] = useState(null);\r\n    const [items, setItems] = useState(null);\r\n    const [selectedDate,setSelectedDate] = useState(null)\r\n    const [stateError,setStateError] = useState('')\r\n    const [districtError,setDistrictError] = useState('')\r\n    const [dateError,setDateError] = useState('')\r\n    const focusRef = useRef()\r\n\r\n    const handleStateChange = (event) => {\r\n        setState(event.target.value)\r\n        setStateError('')\r\n        fetch(url1+`${event.target.value}`)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                setDistricts(result.districts);\r\n            });\r\n    }\r\n\r\n    const handleDistrictChoice =(event) => {\r\n        setDistrictId(event.target.value);\r\n        setDistrictError('')\r\n    }\r\n\r\n    const handleDateChange = date => {\r\n        setSelectedDate(date)\r\n        setDateError('')\r\n    }\r\n\r\n    const retrieve = (e) => {\r\n        e.preventDefault();\r\n        if(state && districtId && selectedDate)\r\n        {\r\n            const date = selectedDate;\r\n            const today = `${date.getDate()}-${(date.getMonth()+1).toString().padStart(2,0)}-${date.getUTCFullYear()}`\r\n            fetch(url2+`?district_id=${districtId}&date=${today}`)\r\n                .then(res=> res.json())\r\n                .then(result => {\r\n                    let res = result.sessions?result.sessions.filter(item => item.available_capacity>0):[];\r\n                    setItems(res);\r\n                    focusRef.current?.scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                });\r\n        }\r\n        if(!state)\r\n            setStateError('State is not selected')\r\n        if(!districtId)\r\n            setDistrictError('District is not selected')\r\n        if(!selectedDate)\r\n            setDateError('Date is not selected')\r\n    }\r\n\r\n    return (\r\n        \r\n        <div>\r\n            <div className=\"App\">\r\n                <form onSubmit={retrieve}>\r\n                <div className='container'>\r\n                    <p><label>Choose State: </label></p>\r\n                    <select className='input' onChange={handleStateChange}>\r\n                        {\r\n                            states.map(state=>  <option key={state.state_id} value={state.state_id}>{state.state_name}</option>)\r\n                        }\r\n                    </select>\r\n                    <p className='error'>{stateError}</p>\r\n                </div>\r\n                <div className='container'>\r\n                <p><label>Choose District: </label></p>\r\n                    <select className='input' onChange={handleDistrictChoice}>\r\n                        {\r\n                            districts.map(district=> <option key={district.district_id} value={district.district_id}>{district.district_name}</option>)\r\n                        }\r\n                    </select>\r\n                    <p className='error'>{districtError}</p>\r\n                </div>\r\n            \r\n                <div className='container'>\r\n                    <p><label>Date:</label></p>\r\n                    <DatePicker \r\n                    className='input'\r\n                    placeholderText=\"Enter date...\" \r\n                    selected={selectedDate} \r\n                    withPortal\r\n                    onChange={date => handleDateChange(date)} \r\n                    dateFormat='dd/MM/yyyy' \r\n                    minDate={new Date()} \r\n                    isClearable \r\n                    showYearDropdown \r\n                    scrollableMonthYearDropdown/>\r\n                    <p className='error'>{dateError}</p>\r\n                </div>\r\n                        \r\n                <div style={{marginLeft:'10px'}}>\r\n                    <div><button type='submit' className='button btn2'><span><GiLoveInjection style={{marginBottom: '4px'}}/> Find Slots</span></button></div>\r\n                    <div><button className='button btn2' onClick={() => props.onChange('0')}><span><AiOutlineHome style={{marginBottom: '4px'}}/> Home</span></button></div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n            <div ref={focusRef}><FetchCenters items={items}/></div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport SearchByPIN from './SearchByPIN';\r\nimport Logo from './Logo';\r\nimport SearchByDistrict from './SearchByDistrict';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nfunction App() {\r\n  const [option,setOption] = useState('0');\r\n  const handleClick = (val)=> {\r\n      if(val!=='0')\r\n        setOption(val);\r\n      else\r\n        setOption(0);\r\n  }\r\n  return (\r\n    <div>\r\n      <div className='logo'><Logo/></div>\r\n      {option==='0'?\r\n            <div className='center'>\r\n              <div style={{textAlign:'center'}}>\r\n                <button className='button1 btn1' onClick={() => handleClick('1')}><span>Search By PIN</span></button>\r\n              </div>\r\n              <div style={{textAlign:'center'}}>\r\n                <button className='button1 btn1' onClick={() => handleClick('2')}><span>Search By District</span></button>\r\n                </div>\r\n            </div>\r\n        :<></>}\r\n        {option==='1'?<SearchByPIN onChange={(val) => setOption(val)}/>:<></>}\r\n        {option==='2'?<SearchByDistrict onChange={(val) => setOption(val)}/>:<></>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css'\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}