{"version":3,"sources":["components/Accordion.js","components/Center.js","components/FetchCenters.js","components/SearchByPIN.js","components/Logo.js","components/SearchByDistrict.js","components/App.js","index.js"],"names":["Accordion","_handleClick","bind","this","acc","_acc","children","i","a","onclick","classList","toggle","length","ref","onClick","props","Component","Center","useState","clicked","setClicked","index","from","Date","item","toLocaleTimeString","timeZone","hour12","hour","minute","to","className","name","available_capacity","style","fontSize","address","vaccine","fee","available_capacity_dose1","available_capacity_dose2","FetchCenters","items","Provider","value","color","size","map","session_id","textAlign","window","scrollTo","top","behavior","SearchByPIN","pin","setPin","setItems","selectedDate","setSelectedDate","pinerror","setPinError","invalidPin","setInvalidPin","dateError","setDateError","focusRef","useRef","onSubmit","e","preventDefault","date","today","getDate","getMonth","toString","padStart","getUTCFullYear","fetch","then","res","json","result","error","sessions","filter","current","scrollIntoView","block","type","placeholder","onChange","p","target","placeholderText","selected","handleDateChange","dateFormat","withPortal","minDate","isClearable","showYearDropdown","scrollableMonthYearDropdown","marginBottom","Logo","SearchByDistrict","states","require","state","setState","districts","setDistricts","districtId","setDistrictId","stateError","setStateError","districtError","setDistrictError","event","state_id","state_name","district","district_id","district_name","marginLeft","App","option","setOption","handleClick","val","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d9b5a42.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class Accordion extends Component {\r\n    constructor() {\r\n        super();\r\n        this._handleClick = this._handleClick.bind(this);\r\n      }\r\n      \r\n      componentDidMount() {\r\n        this._handleClick();\r\n      }\r\n      \r\n      _handleClick() {\r\n        const acc = this._acc.children;\r\n        for (let i = 0; i < acc.length; i++) {\r\n          let a = acc[i];\r\n          a.onclick = () => a.classList.toggle(\"active\");\r\n        }\r\n      }\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <div ref={a => this._acc = a} onClick={this._handleClick}>{this.props.children}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Accordion\r\n","import React,{useState} from 'react'\r\nimport {MdExpandMore,MdExpandLess} from 'react-icons/md'\r\nimport Accordion from './Accordion'\r\n\r\nfunction Center(props) {\r\n    const [clicked,setClicked] = useState(false)\r\n    const toggle = index => {\r\n        if(clicked === index)   \r\n            return setClicked(null)\r\n        setClicked(index)\r\n    }\r\n    let index=props.index\r\n    let from = new Date('1970-01-01T' + props.item.from + 'Z').toLocaleTimeString({},{timeZone:'UTC',hour12:true,hour:'numeric',minute:'numeric'});\r\n    let to= new Date('1970-01-01T' + props.item.to + 'Z').toLocaleTimeString({},{timeZone:'UTC',hour12:true,hour:'numeric',minute:'numeric'});\r\n\r\n   return (\r\n            <div>\r\n                <Accordion>\r\n                    <div className='accor' onClick={()=>toggle(index)}>\r\n                        <div className='tab'>\r\n                            <div className='impFont'>{props.item.name}</div>\r\n                            <div className='slots'>Slots: {props.item.available_capacity}</div>\r\n                            <span>{clicked===index?<MdExpandLess/>:<MdExpandMore/>}</span>\r\n                        </div>\r\n                        <div className='expand'>\r\n                            <div><strong style={{fontSize:'1.1em'}}>Address: </strong>{props.item.address}</div>\r\n                            <div><strong style={{fontSize:'1.1em'}}>Timing: </strong>{from}-{to}</div>\r\n                            <div><strong style={{fontSize:'1.1em'}}>Vaccine: </strong>{props.item.vaccine}</div>\r\n                            <div><strong style={{fontSize:'1.1em'}}>Price: </strong>&#8377;{props.item.fee}</div>\r\n                            <div><strong style={{fontSize:'1.1em'}}>Dose 1: </strong>{props.item.available_capacity_dose1}</div>\r\n                            <div><strong style={{fontSize:'1.1em'}}>Dose 2: </strong>{props.item.available_capacity_dose2}</div>\r\n                        </div>\r\n                    </div>\r\n                </Accordion>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Center\r\n","import React from 'react'\r\nimport Center from './Center';\r\nimport {BsExclamationTriangleFill} from 'react-icons/bs';\r\nimport { IconContext } from 'react-icons/lib'\r\n\r\nfunction FetchCenters(props) {\r\n    const scrollToTop = () =>{\r\n        window.scrollTo({\r\n          top: 0, \r\n          behavior: 'smooth'\r\n        });\r\n      };\r\n    return (\r\n        <div>\r\n       { !props.items ? <></> : props.items.length ? (\r\n        <div>\r\n            <IconContext.Provider value={{color:'#00ffb9',size:'25px'}}>\r\n            <div className='accordionSection'>\r\n                \r\n                    {props.items.map(item => (<Center key={item.session_id} item={item} index={item.session_id} />))}\r\n                    <div style={{textAlign:'center'}}><button className='topbtn' onClick={scrollToTop}>Back to Top</button></div>\r\n            </div>\r\n            </IconContext.Provider>\r\n        </div>\r\n            ) : (<div className='occupyFull'><div><BsExclamationTriangleFill /></div><div><h3>Sorry! No slots available.</h3></div></div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FetchCenters\r\n","import React, { useState,useRef } from 'react';\r\n\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport FetchCenters from './FetchCenters';\r\nimport { AiOutlineHome } from 'react-icons/ai';\r\nimport { GiLoveInjection } from 'react-icons/gi';\r\n\r\nconst url = \"https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByPin\"\r\n\r\nexport default function SearchByPIN(props) {\r\n    const [pin, setPin] = useState('');\r\n    const [items, setItems] = useState(null);\r\n    const [selectedDate,setSelectedDate] = useState(null)\r\n    const [pinerror,setPinError] = useState('')\r\n    const [invalidPin,setInvalidPin] = useState('')\r\n    const [dateError,setDateError] = useState('')\r\n    const focusRef = useRef()\r\n  \r\n    \r\n    const handlePINChange = e => {\r\n        let p = e.target.value;\r\n        if(p)\r\n        {\r\n            setPin(p)\r\n            setPinError('')\r\n        }\r\n        else\r\n        {\r\n            setPin('')\r\n            setPinError('Pincode cannot be empty')\r\n        }\r\n        setInvalidPin('')\r\n    }\r\n\r\n    const handleDateChange = date => {\r\n        setSelectedDate(date)\r\n        setDateError('')\r\n    }\r\n\r\n    const search = (e) => {\r\n        e.preventDefault();\r\n        if(pin && selectedDate)\r\n        {\r\n            const date = selectedDate;\r\n            const today = `${date.getDate()}-${(date.getMonth()+1).toString().padStart(2,0)}-${date.getUTCFullYear()}`\r\n\r\n            fetch(url+`?pincode=${pin}&date=${today}`)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n            if(result.error){\r\n                setInvalidPin(result.error);\r\n                setItems(null)\r\n            }\r\n            else\r\n            {\r\n                let res = result.sessions?result.sessions.filter(item => item.available_capacity>0):[];\r\n                setItems(res) \r\n            }\r\n            focusRef.current?.scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n            });\r\n        }\r\n        if(!pin){\r\n            setPinError('Pincode cannot be empty')\r\n        }\r\n        if(!selectedDate)\r\n            setDateError('Date is not selected')\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <div className='App'>\r\n            <form onSubmit={search}>\r\n                <div>\r\n                <p><label>Pincode:</label></p>\r\n                <input \r\n                    className='input'\r\n                    type=\"number\"\r\n                    name=\"PIN\"\r\n                    placeholder=\"Enter PIN Code...\"\r\n                    onChange={handlePINChange}\r\n                    value={pin}\r\n                />\r\n                </div>\r\n                {invalidPin?<p className='error'>{invalidPin}</p>:<></>}\r\n                <p className='error'>{pinerror}</p>\r\n                \r\n                <div>\r\n                <p><label>Date:</label></p>\r\n                \r\n                <DatePicker \r\n                placeholderText=\"Enter date...\" \r\n                className='input'\r\n                selected={selectedDate} \r\n                onChange={date => handleDateChange(date)} \r\n                dateFormat='dd/MM/yyyy' \r\n                withPortal\r\n                minDate={new Date()} \r\n                isClearable \r\n                showYearDropdown \r\n                scrollableMonthYearDropdown/>\r\n                \r\n                </div>\r\n                <p className='error'>{dateError}</p>\r\n\r\n                <div>\r\n                    <div><button type='submit' className='button btn2' ><span><GiLoveInjection style={{marginBottom: '4px'}}/> Find Slots</span></button></div>\r\n                    <div><button className='button btn2' onClick={() => props.onChange('0')}><span><AiOutlineHome style={{marginBottom: '4px'}}/> Home</span></button>{' '}</div>\r\n                </div>\r\n                \r\n                \r\n            </form>\r\n            </div>\r\n            \r\n            <div ref={focusRef}><FetchCenters items={items}/></div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Logo() {\r\n    return (\r\n        <div>\r\n            COWIN\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React,{useState,useRef} from 'react';\r\nimport FetchCenters from './FetchCenters';\r\nimport DatePicker from 'react-datepicker';\r\nimport { GiLoveInjection } from 'react-icons/gi';\r\nimport { AiOutlineHome } from 'react-icons/ai';\r\n\r\nexport default function SearchByDistrict(props) {\r\n    const states=require('../assets/states.json');\r\n    const url1='https://cdn-api.co-vin.in/api/v2/admin/location/districts/';\r\n    const url2='https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByDistrict';\r\n\r\n    const [state,setState] = useState('')\r\n    const [districts, setDistricts] = useState([]);\r\n    const [districtId, setDistrictId] = useState(null);\r\n    const [items, setItems] = useState(null);\r\n    const [selectedDate,setSelectedDate] = useState(null)\r\n    const [stateError,setStateError] = useState('')\r\n    const [districtError,setDistrictError] = useState('')\r\n    const [dateError,setDateError] = useState('')\r\n    const focusRef = useRef()\r\n\r\n    const handleStateChange = (event) => {\r\n        setState(event.target.value)\r\n        setStateError('')\r\n        fetch(url1+`${event.target.value}`)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                setDistricts(result.districts);\r\n            });\r\n    }\r\n\r\n    const handleDistrictChoice =(event) => {\r\n        setDistrictId(event.target.value);\r\n        setDistrictError('')\r\n    }\r\n\r\n    const handleDateChange = date => {\r\n        setSelectedDate(date)\r\n        setDateError('')\r\n    }\r\n\r\n    const retrieve = (e) => {\r\n        e.preventDefault();\r\n        if(state && districtId && selectedDate)\r\n        {\r\n            const date = selectedDate;\r\n            const today = `${date.getDate()}-${(date.getMonth()+1).toString().padStart(2,0)}-${date.getUTCFullYear()}`\r\n            fetch(url2+`?district_id=${districtId}&date=${today}`)\r\n                .then(res=> res.json())\r\n                .then(result => {\r\n                    let res = result.sessions?result.sessions.filter(item => item.available_capacity>0):[];\r\n                    setItems(res);\r\n                    focusRef.current?.scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                });\r\n        }\r\n        if(!state)\r\n            setStateError('State is not selected')\r\n        if(!districtId)\r\n            setDistrictError('District is not selected')\r\n        if(!selectedDate)\r\n            setDateError('Date is not selected')\r\n    }\r\n\r\n    return (\r\n        \r\n        <div>\r\n            <div className=\"App\">\r\n                <form onSubmit={retrieve}>\r\n                <div className='container'>\r\n                    <p><label>Choose State: </label></p>\r\n                    <select className='input' onChange={handleStateChange}>\r\n                        {\r\n                            states.map(state=>  <option key={state.state_id} value={state.state_id}>{state.state_name}</option>)\r\n                        }\r\n                    </select>\r\n                    <p className='error'>{stateError}</p>\r\n                </div>\r\n                <div className='container'>\r\n                <p><label>Choose District: </label></p>\r\n                    <select className='input' onChange={handleDistrictChoice}>\r\n                        {\r\n                            districts.map(district=> <option key={district.district_id} value={district.district_id}>{district.district_name}</option>)\r\n                        }\r\n                    </select>\r\n                    <p className='error'>{districtError}</p>\r\n                </div>\r\n            \r\n                <div className='container'>\r\n                    <p><label>Date:</label></p>\r\n                    <DatePicker \r\n                    className='input'\r\n                    placeholderText=\"Enter date...\" \r\n                    selected={selectedDate} \r\n                    withPortal\r\n                    onChange={date => handleDateChange(date)} \r\n                    dateFormat='dd/MM/yyyy' \r\n                    minDate={new Date()} \r\n                    isClearable \r\n                    showYearDropdown \r\n                    scrollableMonthYearDropdown/>\r\n                    <p className='error'>{dateError}</p>\r\n                </div>\r\n                        \r\n                <div style={{marginLeft:'10px'}}>\r\n                    <div><button type='submit' className='button btn2'><span><GiLoveInjection style={{marginBottom: '4px'}}/> Find Slots</span></button></div>\r\n                    <div><button className='button btn2' onClick={() => props.onChange('0')}><span><AiOutlineHome style={{marginBottom: '4px'}}/> Home</span></button></div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n            <div ref={focusRef}><FetchCenters items={items}/></div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport SearchByPIN from './SearchByPIN';\r\nimport Logo from './Logo';\r\nimport SearchByDistrict from './SearchByDistrict';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nfunction App() {\r\n  const [option,setOption] = useState('0');\r\n  const handleClick = (val)=> {\r\n      if(val!=='0')\r\n        setOption(val);\r\n      else\r\n        setOption(0);\r\n  }\r\n  return (\r\n    <div>\r\n      <div className='logo'><Logo/></div>\r\n      {option==='0'?\r\n            <div className='center'>\r\n              <div>\r\n                <button className='button1 btn1' onClick={() => handleClick('1')}><span>Search By PIN</span></button>\r\n              </div>\r\n              <div>\r\n                <button className='button1 btn1' onClick={() => handleClick('2')}><span>Search By District</span></button>\r\n                </div>\r\n            </div>\r\n            \r\n        :<></>}\r\n        {option==='1'?<SearchByPIN onChange={(val) => setOption(val)}/>:<></>}\r\n        {option==='2'?<SearchByDistrict onChange={(val) => setOption(val)}/>:<></>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css'\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}